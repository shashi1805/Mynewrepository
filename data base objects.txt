1.Create the Customer table with the following columns. 
CustomerId	Number(5)
Cust_Name	varchar2(20)
Address1	Varchar2(30)
Address2 	Varchar2(30)
SQL> create table customer(customer_id number(5),cust_name varchar2(20),address1 varchar2(30),address2 varchar2(20));

Table created.

22.Modify the Customer table Cust_Name column of datatype with Varchar2(30), rename the column to CustomerName and it should not accept Nulls.
  alter table customer rename column cust_name to customername;

Table altered.

SQL> alter table customer modify customername varchar2(30) not null;

Table altered.

SQL> desc customer;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMER_ID                                        NUMBER(5)
 CUSTOMERNAME                              NOT NULL VARCHAR2(30)
 ADDRESS1                                           VARCHAR2(30)
 ADDRESS2                                           VARCHAR2(20)

3.a) Add the following Columns to the Customer table. 
Gender		Varchar2(1)
Age		Number(3)
PhoneNo	Number(10)
 b) Rename the Customer table to Cust_Table

SQL>  alter table customer
  2      add  gender varchar2(1);

Table altered.

SQL> alter table customer
  2     add age number(3);

Table altered.
 alter table customer
  2     add  phoneno number(10);

Table altered.

SQL> desc customer;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMER_ID                                        NUMBER(5)
 CUSTOMERNAME                              NOT NULL VARCHAR2(30)
 ADDRESS1                                           VARCHAR2(30)
 ADDRESS2                                           VARCHAR2(20)
 GENDER                                             VARCHAR2(1)
 AGE                                                NUMBER(3)
 PHONENO                                            NUMBER(10)

3.b)SQL>  alter table customer rename to cust_table;

Table altered.

4. Insert rows with the following data in to the Customer table.Insert into customer values: (1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, ‘25, 7878776’)
In similar manner, add the below records to the Customer table:
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

SQL>  insert into cust_table values(1001,'george','#116 france','#116 france','m',25,434524);

1 row created.
SQL> insert into cust_table values(1002,'becker','#114 new york','#114 new york','m',45,431525);

1 row created.

SQL>  select * from cust_table;

CUSTOMER_ID CUSTOMERNAME                   ADDRESS1
----------- ------------------------------ ------------------------------
ADDRESS2             G        AGE    PHONENO
-------------------- - ---------- ----------
       1001 george                         #116 france
#116 france          m         25     434524

       1002 becker                         #114 new york
#114 new york        m         45     431525

5.Add the Primary key constraint for Customerld with the name Custld_Prim. 

SQL> alter table cust_table add constraints custid_prim primary key (customer_id);

Table altered.

6.Insert the row given below in the Customer table and see the message generated by the Oracle server. 
1002, John, #114 Chicago, #114 Chicago, M, 45, 439525

SQL>  insert into cust_table values(1002,'john','#114 new york','#114 new york','m',45,439525);
 insert into cust_table values(1002,'john','#114 new york','#114 new york','m',45,439525)
*
ERROR at line 1:
ORA-00001: unique constraint (SYS.CUSTID_PRIM) violated

7.Disable the constraint on CustomerId, and insert the following data:
1002, Becker, #114 New York, #114 New york , M, 45, 431525
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525

SQL> alter table cust_table disable constraint custid_prim;

Table altered.
SQL>insert into cust_table values(1002,'becker','#114 new york','#114 new york','m',45,431525);

1 row created.
SQL> insert into cust_table values(1003,'nanapatekar','#115 india','#115 india','m',45,431525);

1 row created.

8.Enable the constraint on CustomerId of the Customer table, and see the message generated by the Oracle server. 

SQL> alter table cust_table
  2      enable constraint custid_prim;
alter table cust_table
*
ERROR at line 1:
ORA-02437: cannot validate (SYS.CUSTID_PRIM) - primary key violated

9.Drop the constraint Custld_Prim on CustomerId and insert the following Data. Alter Customer table, drop constraint Custid_Prim.
1002, Becker, #114 New York, #114 New york , M, 45, 431525, 15000.50
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525, 20000.50

SQL> alter table
  2      cust_table
  3     drop constraint custid_prim;

Table altered.
SQL> alter table cust_table
  2      add sal number;

Table altered.

SQL> insert into cust_table values(1002,'becker','#114 new york','#114 new york','m',45,431525,15000.50);

1 row created.
SQL> insert into cust_table values(1003,'nanapatekar','#115 india','#115 india','m',45,431525,20000.50);

1 row created.
10.Delete all the existing rows from Customer table, and let the structure remain itself using TRUNCATE statement. 

SQL> truncate table cust_table;

Table truncated.
11.In the Customer table, add a column E_mail. 

SQL> alter table
  2     cust_table
  3     add e_mail varchar2(20);

Table altered.

12).Drop the E_mail column from Customer table.


13.reate the Suppliers table based on the structure of the Customer table. Include only the CustomerId, CustomerName, Address1, Address2, and phoneno columns. 
Name the columns in the new table as SuppID, SName, Addr1, Addr2, and Contactno respectively. 

SQL> create table suppliers as select customer_id as suppid, customername as sname, address1 as addr1, address2 as addr2,phoneno as contactno from cust_table;

Table created.

SQL>  desc suppliers;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 SUPPID                                             NUMBER(5)
 SNAME                                     NOT NULL VARCHAR2(30)
 ADDR1                                              VARCHAR2(30)
 ADDR2                                              VARCHAR2(20)
 CONTACTNO                                          NUMBER(10)

14.Drop the above table and recreate the following table with the name CustomerMaster. 
CustomerId	Number(5) Primary key(Name of constraint is CustId_PK)
CustomerName	Varchar2(30) Not Null
Addressl	Varchar2(30) Not Null
Address2	Varchar2(30)
Gender		Varchar2(l)
Age		Number(3)
PhoneNo	Number(10)


SQL> drop table suppliers;

Table dropped.

SQL> create table customermaster(customerid number(5),customername varchar2(30) not null,address1 varchar2(30) not null,address2 varchar2(30), gender varchar2(1), age number(3),phoneno number(10),constraint custid_pk primary key(customerid));

Table created.

15.Create the AccountsMaster table with the following Columns. Use sequence to generate Account number
Customerld		Number(5)
AccountNumber		Number(10,2) Primary key(Name of constraint is Acc_PK)
AccountType		Char(3)
LedgerBalance		Number(10,2) Not Null

 create table accountsmaster(
  2     customerid number(5),
  3    accountnumber number(10,2),
  4     accounttype char(3),
  5     ledgerbalance number(10,2) not null,
  6     constraint acc_pk primary key(accountnumber));
SQL> desc accountsmaster;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 ACCOUNTTYPE                                        CHAR(3)
 LEDGERBALANCE                             NOT NULL NUMBER(10,2)


16.Relate AccountsMaster table and CustomerMaster table through Customerld column with the constraint name Cust_acc.

SQL> alter table accountsmaster add constraint cust_acc foreign key (customerid) references customermaster(customerid);

Table altered.

17.Insert the following rows to the CustomerMaster table:
1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

 insert into customermaster values(1000,'allen','#115 chicago','#115 chicago','m',25,7878776);

1 row created.

SQL>
SQL>  insert into customermaster values(1001,'george','#116 france','#116 france','m',25,434524);

1 row created.

SQL> insert into customermaster values(1002,'becker','#114 new york','#114 new york','m',45,431525);

1 row created.

SQL>
SQL>  select * from customermaster;

CUSTOMERID CUSTOMERNAME                   ADDRESS1
---------- ------------------------------ ------------------------------
ADDRESS2                       G        AGE    PHONENO
------------------------------ - ---------- ----------
      1000 allen                          #115 chicago
#115 chicago                   m         25    7878776

      1001 george                         #116 france
#116 france                    m         25     434524

      1002 becker                         #114 new york
#114 new york                  m         45     431525


18.Modify the AccountMaster table with the Check constraint to ensure AccountType should be either NRI or IND.

SQL> alter table accountsmaster add constraint acc_tpye check(accounttype='nri'or accounttype= 'ind');

Table altered.

19).Modify the AccountsMaster table keeping a Check constraint with the name Balance_Check for the Minimum Balance which should be greater than 5000

SQL>  alter table accountsmaster add constraint balance_check check(ledgerbalance>5000);

Table altered.

20.Modify the AccountsMaster table such that if Customer is deleted from Customer table then all his details should be deleted from AccountsMaster table. 


SQL> alter table accountsmaster
  2    add constraint cust_acc
  3    foreign key(customerid) references customermaster(customerid) on delete cascade;

Table altered.
SQL>  select * from accountsmaster;

no rows selected

21.Create Backup copy for the AccountsMaster table with the name ‘AccountDetails’. 
SQL>  create table accountdetails as select * from accountsmaster;

Table created.

SQL>   desc accountdetails;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 ACCOUNTNUMBER                                      NUMBER(10,2)
 ACCOUNTTYPE                                        CHAR(3)
 LEDGERBALANCE                             NOT NULL NUMBER(10,2)

22).Create a view ‘Acc_view’ with columns Customerld, CustomerName, AccountNumber, AccountType, and LedgerBalance from AccountsMaster. In the view Acc_view, the column names should be CustomerCode,AccountHolderName, AccountNumber, Type, and Balance for the respective columns from AccountsMaster table
 

SQL>  create view acc_view as
  2     select a.customerid as "customer code",
  3     c.customername as " account holder name",
  4     a.accountnumber as"account number ",
  5     a.ledgerbalance as" balance"
  6      from customermaster c, accountsmaster a where c.customerid=a.customerid;

View created.
QL> desc acc_view;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 customer code                                      NUMBER(5)
  account holder name                      NOT NULL VARCHAR2(30)
 account number                            NOT NULL NUMBER(10,2)
  balance                                  NOT NULL NUMBER(10,2)

23.Create a view on AccountsMaster table with name vAccs_Dtls. This view should list all customers whose AccountType is ‘IND’ and their balance amount should not be less than 10000. Using this view any DML operation should not violate the view conditions. 

SQL> create view vAaccs_Dtls as
  2       select a.customerid as "Customer Code",
  3    c.customername as "Account Holder Name",
  4     a.accountnumber as "Account Number",
  5       a.accounttype as "Type",
  6        a.ledgerbalance as "Balance"from accountsmaster a,customermaster c
  7      where c.customerid=a.customerid
  8      and a.accounttype like '%nri%'
  9      and a.ledgerbalance>7000;

View created.

24.Create a view accsvw10 which will not allow DML statement against it.

SQL>  create view accsvw10 as
  2     select a.customerid as "Customer Code",
  3          c.customername as "Account Holder Name",
  4       a.accountnumber as "Account Number",
  5        a.accounttype as "Type",
  6        a.ledgerbalance as "Balance"
  7     from accountsmaster a,customermaster c
  8          where c.customerid=a.customerid
  9        and a.accounttype like '%nri'
 10      and a.ledgerbalance<7000
 11      with read only;

View created.

25.Create a Sequence with the name Seq_Dept on Deptno column of Department_Masters table. It should start from 40 and stop at 200. Increment parameter for the sequence Seq_Dept should be in step of 10.

QL>  create sequence seq_dept
  2      start with 40
  3      increment by 10
  4     minvalue 40
  5     maxvalue 200
  6      nocycle;
Sequence created.

26.Insert three sample rows by using the above sequence in Department_Masters table.

SQL>  insert into department_master values(seq_dept.nextval,'engineer');

1 row created.

SQL>  insert into department_master values(seq_dept.nextval,'teacher');

1 row created.

SQL>  insert into department_master values(seq_dept.nextval,'doctor');

1 row created.

SQL> select * from department_master;

 DEPT_CODE DEPT_NAME
---------- --------------------------------------------------
        36 teacher
        37 engineer
        38 manager
        40 engineer
        50 teacher
        60 doctor

6 rows selected.

27.Drop the Seq_Dept sequence. 

SQL>  drop sequence seq_dept;

Sequence dropped.

28.Get information on the index No_Name from the Data Dictionary. 

SQL>  create index no_name on department_master(dept_name);

Index created.

29.Create synonym synEmp for the EMP table. 

SQL> create synonym synemp for emp;

Synonym created.


30.Get Information on synonym synEmp from the Data Dictionary. 



31.Note: Perform this after creating the Employee Table mentioned in the next Lab assignment. Create Index on HireDate column and give the name as idx_emp_hiredate for this object. 

SQL>  create index idx_emp_hiredate on employee(hiredate);

Index created.

32.Create a Sequence with the name Seq_Emp on Empno column of Employee table. It should start from 1001. Try to set Minimum value for this sequence which is less than / greater than 1001, use the sequence to generate Empno while inserting records in Employee table and check the values generated.

SQL>  create sequence seq_emp
  2      start with 1001
  3      increment  by 1
  4      minvalue 1000
  5     maxvalue 1010
  6     nocycle;

Sequence created.